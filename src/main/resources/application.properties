# ===============================
# APLICAÇÃO
# ===============================
# Nome da aplicação
spring.application.name=Unigym

# ===============================
# BANCO DE DADOS
# ===============================
# Configuração da fonte de dados H2
# Usa o arquivo local para persistência dos dados
# AUTO_SERVER=TRUE permite que múltiplas conexões sejam feitas ao mesmo arquivo
spring.datasource.url=jdbc:h2:file:./unigym-db;AUTO_SERVER=TRUE
spring.datasource.username=sa
spring.datasource.password=

# ===============================
# CONSOLE H2
# ===============================
# Habilita o console web para administração do banco H2
# Acessível em http://localhost:8080/h2-console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ===============================
# JPA / HIBERNATE
# ===============================
# Estratégia de atualização do esquema do banco
# update: mantém os dados existentes e atualiza o esquema se necessário
# o certo é usar validate em um ambiente de produção, mas como é um projeto de aprendizado, usarei update BY: Astal
spring.jpa.hibernate.ddl-auto=update

# ===============================
# LOGGING
# ===============================
# Configurações para exibir as consultas SQL no console
# Útil para debug e desenvolvimento
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true